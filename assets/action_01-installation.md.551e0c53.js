import{l as n,f as s,G as a}from"./framework.8207f0d3.js";const t='{"title":"Instalation","description":"","frontmatter":{},"headers":[{"level":2,"title":"Instalation","slug":"instalation"},{"level":2,"title":"Constructor properties (ActMasterOptions)","slug":"constructor-properties-actmasteroptions"},{"level":2,"title":"Nuxt.JS","slug":"nuxt-js"}],"relativePath":"action/01-installation.md","lastUpdated":1610507121372}',o={},p=a('<h2 id="instalation"><a class="header-anchor" href="#instalation" aria-hidden="true">#</a> Instalation</h2><p>Start by creating a project.</p><p>Then add a vue-act-master.</p><div class="language-sh"><pre><code>yarn add vue-act-master\n</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// main.ts</span>\n\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> VueActMaster <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-act-master&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Actions</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> actions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../you/actions/path&#39;</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueActMaster<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  actions<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  el<span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>h<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="language-json"><pre><code><span class="token comment">// tsconfig.json</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    ...\n    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// Add the types in typescript</span>\n      <span class="token string">&quot;vue-act-master&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>It is also possible to transfer other options. You can use the <code>ActMasterOptions</code> type.</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> VueActMaster<span class="token punctuation">,</span> ActMasterOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-act-master&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">//...</span>\n</code></pre></div><h2 id="constructor-properties-actmasteroptions"><a class="header-anchor" href="#constructor-properties-actmasteroptions" aria-hidden="true">#</a> Constructor properties (ActMasterOptions)</h2><table><thead><tr><th>Property</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>actions?: ActMasterAction[];</td><td>[]</td><td>An array of action items</td></tr><tr><td>di?: DIMap;</td><td>{}</td><td>DI entities</td></tr><tr><td>errorOnReplaceAction?: boolean;</td><td>true</td><td>Error on action change</td></tr><tr><td>errorOnReplaceDI?: boolean;</td><td>false</td><td>Error on entity DI replacement</td></tr><tr><td>errorOnEmptyAction?: boolean;</td><td>true</td><td>Error on empty action.</td></tr><tr><td>errorHandlerEventName?: ActEventName;</td><td>undefined</td><td>Action call on error (can be used in actions too)</td></tr></tbody></table><h2 id="nuxt-js"><a class="header-anchor" href="#nuxt-js" aria-hidden="true">#</a> Nuxt.JS</h2><p>Install dependencies:</p><div class="language-bash"><pre><code><span class="token function">yarn</span> <span class="token function">add</span> vue-act-master\n</code></pre></div><p>Add <code>vue-act-master/nuxt</code> to modules section of <code>nuxt.config.js</code></p><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  modules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue-act-master/nuxt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',15);o.render=function(a,t,o,e,c,r){return n(),s("div",null,[p])};export default o;export{t as __pageData};
