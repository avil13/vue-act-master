import{_ as n,c as s,o as a,a as t}from"./app.7370f633.js";const g='{"title":"VanillaJS, React, or Composition API","description":"","frontmatter":{},"headers":[{"level":2,"title":"From Zero-to-Hero","slug":"from-zero-to-hero"},{"level":2,"title":"Getting an Instance","slug":"getting-an-instance"},{"level":2,"title":"exec","slug":"exec"},{"level":2,"title":"subscribe, actSubscribe, on","slug":"subscribe-actsubscribe-on"},{"level":3,"title":"unsubscribe","slug":"unsubscribe"},{"level":3,"title":"Clear subscription list","slug":"clear-subscription-list"}],"relativePath":"action/05-composition-api.md","lastUpdated":1639131624688}',p={},o=t(`<h1 id="vanillajs-react-or-composition-api" tabindex="-1">VanillaJS, React, or Composition API <a class="header-anchor" href="#vanillajs-react-or-composition-api" aria-hidden="true">#</a></h1><p>If using classes and their instances does not suit you in your project, you can use helpers.</p><h2 id="from-zero-to-hero" tabindex="-1">From Zero-to-Hero <a class="header-anchor" href="#from-zero-to-hero" aria-hidden="true">#</a></h2><div class="language-bash"><pre><code><span class="token comment"># installation</span>
<span class="token function">yarn</span> <span class="token function">install</span> act-master
</code></pre></div><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ActMaster <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;act-master&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// Actions</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> actions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../you/actions/path&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Init</span>
<span class="token keyword">new</span> <span class="token class-name">ActMaster</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  actions
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// The following handlers will be for example</span>
<span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>The installation is finished. Now we can program.</p><h2 id="getting-an-instance" tabindex="-1">Getting an Instance <a class="header-anchor" href="#getting-an-instance" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> act <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;act-master&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// This call returns an ActMaster instance in which all methods are available.</span>
<span class="token keyword">const</span> $act <span class="token operator">=</span> <span class="token function">act</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
$act<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$act<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>The imported &quot;act&quot; also contains the basic functions. So you can call methods from functions, or references to them. Fewer words, the code will be clearer.</p><h2 id="exec" tabindex="-1">exec <a class="header-anchor" href="#exec" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> act<span class="token punctuation">,</span> exec <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;act-master&#39;</span><span class="token punctuation">;</span>

act<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// OR</span>
<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="subscribe-actsubscribe-on" tabindex="-1">subscribe, actSubscribe, on <a class="header-anchor" href="#subscribe-actsubscribe-on" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token comment">// All functions are just aliases</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> act<span class="token punctuation">,</span> actSubscribe<span class="token punctuation">,</span> subscribe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;act-master&#39;</span><span class="token punctuation">;</span>

<span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">actSubscribe</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

act<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
act<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>You can also pass either the entity that will be used to unsubscribe or a function as the third parameter. An example of a function to unsubscribe.</p><p>For simplicity, all examples will be made in the Vue 3 <code>script setup</code></p><h3 id="unsubscribe" tabindex="-1">unsubscribe <a class="header-anchor" href="#unsubscribe" aria-hidden="true">#</a></h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> subscribe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;act-master&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> onUnmounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>

<span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">,</span> onUnmounted<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// OR</span>
<span class="token function">onUnmounted</span><span class="token punctuation">(</span>
  <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="clear-subscription-list" tabindex="-1">Clear subscription list <a class="header-anchor" href="#clear-subscription-list" aria-hidden="true">#</a></h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> subscribe<span class="token punctuation">,</span> subListClear <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;act-master&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> onUnmounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">OFF_KEY</span> <span class="token operator">=</span> <span class="token string">&#39;some const value&#39;</span><span class="token punctuation">;</span> <span class="token comment">// key for make unsubscribe</span>

<span class="token function">subscribe</span><span class="token punctuation">(</span>
  <span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> <span class="token comment">// event name</span>
  handler<span class="token punctuation">,</span> <span class="token comment">// handler</span>
  <span class="token constant">OFF_KEY</span> <span class="token comment">// You can use a string or object</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Let&#39;s make a simulation of several subscriptions</span>
<span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">,</span> <span class="token constant">OFF_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">,</span> <span class="token constant">OFF_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;get.data&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">,</span> <span class="token constant">OFF_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// At the moment when you need to unsubscribe, we call the method with the unsubscribe key.</span>
<span class="token function">onUnmounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">subListClear</span><span class="token punctuation">(</span><span class="token constant">OFF_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,20),e=[o];function c(u,i,l,r,k,d){return a(),s("div",null,e)}var h=n(p,[["render",c]]);export{g as __pageData,h as default};
