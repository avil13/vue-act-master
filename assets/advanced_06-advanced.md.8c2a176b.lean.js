import{_ as n,c as s,o as a,a as t}from"./app.d48831e1.js";const h='{"title":"For users who have already started working with \\"Act-Master\\"","description":"","frontmatter":{},"headers":[{"level":2,"title":"subsList","slug":"subslist"}],"relativePath":"advanced/06-advanced.md","lastUpdated":1634596839877}',p={},o=t(`__VP_STATIC_START__<h1 id="for-users-who-have-already-started-working-with-act-master" tabindex="-1">For users who have already started working with &quot;Act-Master&quot; <a class="header-anchor" href="#for-users-who-have-already-started-working-with-act-master" aria-hidden="true">#</a></h1><h2 id="subslist" tabindex="-1">subsList <a class="header-anchor" href="#subslist" aria-hidden="true">#</a></h2><p>In the process, you often have to remember the subscriptions you need to unsubscribe from in order to avoid memory leaks.</p><p>In order not to store unnecessary variables for unsubscribes, you can use the <code>subList</code> property.</p><h4 id="example" tabindex="-1">Example: <a class="header-anchor" href="#example" aria-hidden="true">#</a></h4><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      isLoading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> unsubscribe1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;GetDta&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> unsubscribe2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span><span class="token function">inProgress</span><span class="token punctuation">(</span><span class="token string">&#39;GetDta&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>isLoading<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>isLoading <span class="token operator">=</span> isLoading<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// store subscriptions</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span>subsList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;CACHE_KEY&#39;</span><span class="token punctuation">,</span> unsubscribe1<span class="token punctuation">,</span> unsubscribe2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// clear subscriptions</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span>subsList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token string">&#39;CACHE_KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>A key can be any object that can be stored in Map.</p><p>That&#39;s why it&#39;s convenient when using Vue components. You can use the current component instead of the key.</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;GetDta&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// store subscriptions</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span>subsList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> unsubscribe<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// clear subscriptions</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span>subsList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><br><br><h4 id="but-you-can-make-it-even-easier" tabindex="-1">But you can make it even easier!!! <a class="header-anchor" href="#but-you-can-make-it-even-easier" aria-hidden="true">#</a></h4><p>If you use <code>subsList.add</code> - just after <code>subscribe</code> by passing only the key, the unsubscribe function will be added automatically.</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;GetDta&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span>subsList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// right after you subscribe</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span><span class="token function">inProgress</span><span class="token punctuation">(</span><span class="token string">&#39;GetDta&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>isLoading<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>isLoading <span class="token operator">=</span> isLoading<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span>subsList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// right after you subscribe</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// clear subscriptions</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$act<span class="token punctuation">.</span>subsList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>call <code>$act.subsList.add</code> - must be called immediately after subscribing, because only the last unsubscribe function is stored</p></div>__VP_STATIC_END__`,15),c=[o];function e(u,i,l,k,r,d){return a(),s("div",null,c)}var y=n(p,[["render",e]]);export{h as __pageData,y as default};
